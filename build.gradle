plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
}

group = 'com.geotrip'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
//    withJavadocJar()
//    withSourcesJar()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

publishing{
    publications{
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.geotrip'
            artifactId = 'entity-service'
            version = '0.0.1-SNAPSHOT'

//            artifact(tasks.named("jar"))
//            artifact(tasks.named("sourcesJar"))
//            artifact(tasks.named("javadocJar"))
        }
    }

    repositories {
        mavenLocal()
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core:9.22.3'
    implementation 'org.flywaydb:flyway-mysql:9.22.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

//tasks.named('jar') {
//    archiveClassifier.set('')
//    from sourceSets.main.output
//}

tasks.named('test') {
    useJUnitPlatform()
}
